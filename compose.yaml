services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: catering_api:latest
    command: "gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_started
      mailing:
        condition: service_started
    volumes:
      - .:/app
      - staticfiles:/app/staticfiles

  database:
    image: postgres:16-alpine
    container_name: catering_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    container_name: catering_cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data

  broker:
    image: redis:7-alpine
    container_name: catering_broker
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - broker_data:/data

  mailing:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker -l info -Q high_priority,default,low_priority
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - api
      - broker
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=config.settings
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://broker:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://cache:6379/1}

  celery_beat:
    build: .
    command: celery -A config beat -l info
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - api
      - broker
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=config.settings
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://broker:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://cache:6379/1}

  flower:
    build: .
    command: celery -A config flower --broker=${CELERY_BROKER_URL:-redis://broker:6379/0}
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - api
      - broker
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=config.settings
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://broker:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://cache:6379/1}

  nginx:
    build:
        context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - staticfiles:/app/staticfiles
    depends_on:
      - api

volumes:
  postgres_data:
  cache_data:
  broker_data:
  staticfiles:
